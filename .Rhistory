a <- available.packages()
head(rownames(a), 20)
head(rownames(a), 100)
head(rownames(a), 1000)
head(rownames(a), 2000)
find.package("devtools")
find.package()
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
getwd()
FALSE && 6
6 || 7
isTRUE(3)
isTRUE(NA)
arg(median())
arg(median
)
arg(median)
args(median)
args(floor)
args(floor)
floor
?floor
sum(2, 4, 6)
swirl()
swirl
sum(c(2,4,6))
t <- sum()
t <- sum(c(2,4,6)
)
t
p <- median(c(8, 9, 10))
p
g <- floor(c(11.1))
g
dat <- sum(c(num1, num2, num3))
dat <- sum(c(...))
dat <- sum(c())
dat(c,(1,2,3))
dat <- sum(c(x))
dat <- sum()
dat(c,(1,3,5))
dat(1,3)
dat
dat <- sum(c())
dat
m <- sum(a, b)
sum
abc <- function(x) {}
abc <- function(x) { square <- x *x  return(square)}
abc <- function(x) { square <- x * x  return(square)}
abc <- function(x) { square <- x * x  return(square)}
square.it <- funtions(x){}
?rbind
add2 <- function(x,y)
x+y
add2(1,2)
above10 <- function(x) {
use <- x > 10
x[use]
}
adove(c(1,2,22,33))
adove10(c(1,2,22,33))
x <- 1:20
above10(x)
x <- list(a = 1:5)
x
x <- list(a = 1:5, b = rnorm(10))
x
x <- list(a = 1:5, b = rnorm(5))
x
x <- list(a = 1:5, b = rnorm(5))
lapply(x)
lapply(x, sum)
lapply(x, sum)
lapply(x, mean)
rnom(5)
y <- rnmom(5)
rnorm(5)
rnorm(15)
rnorm(3)
rnorm(1)
x <- list(a = matrix(1:4, 2,2), B = matrix(7:12, 3, 2))
x
lapply(x, funtion(abc) abc[,2])
lapply(x, funtion(anc) abc[,2])
lapply(x, funtion(abc) abc[,2])
lapply(x, funtion(elt) elt[,2])
lapply(x, function(abc) abc[,2])
lapply(x, function(abc) abc[,2])
x
sapply(x, mean)
x <- matrix(rnorm(200), 20, 10)
x
list(rep(1, 4), rep(3, 2), rep(2, 3), rep(4,1))
mapply(rep, 1:4, 4:1)
y <- 1:10
y
typeof(y)
length(y)
attributes(y)
z <-(1L, 2L, 3L)
z <- c(1L, 2L, 3L)
z
attributes(z)
typeof(z)
library(plyr)
x <- rnorm(10)
x
f1 < g1(2, 5)
f1 <- g1(2, 5)
f <- data.frame(replicate(6, sample(c(1:10, -99), 6, rep = TRUE)))
f
f <- data.frame(replicate(6, sample(c(1:10, -99), 6, rep = TRUE)))
f
names(df) <- letters[1:6]
names(f) <- letters[1:6]
f
fix_missing <- function(x) {
x[x == -99] <- NA
x
}
d[] <- lapply(df, fix_missing)
fix_missing <- function(x) {
x[x == -99] <- NA
x
}
f[] <- lapply(df, fix_missing)
fix_missing <- function(x) {
x[x == -99] <- NA
x
print(x)
}
f[] <- lapply(df, fix_missing)
fix_missing <- function(x) {
x[x == -99] <- NA
x
}
f[] <- lapply(f, fix_missing)
f
fix_missing <- function(x) {
x[x == -99] <- NA
x
print(x)
}
f[] <- lapply(f, fix_missing)
t[1:5]
tt <- t[1:5]
? set.seed
?approxfun()
print <- function(x) {
if(x > 0)
print("x is greater than zero")
else
print("x is less than or equal to zero")
}
print(1)
rm(print)
printmsg <- function(x) {
if(x > 0)
print("x is greater than zero")
else
print("x is less than or equal to zero")
}
printmsg
printmsg(1)
printmsg(NA)
rm(printmsg)
printmsg <- function(x) {
if(x > 0)
print("x is greater than zero")
else
print("x is less than or equal to zero")
invisible(x)
}
printmsg
printmsg(1)
printmsg(-1)
printmsg(NA)
log(-1)
mean(z)
ls()
rm(z)
mean(z)
traceback()
sum(z)
traceback()
median(z)
traceback()
sum(z)
traceback()
lm()
?lm
lm(y ~ x)
rm(y)
rm(x)
lm(y ~ x)
traceback()
debug()
ls()
debg(df)
debug(df)
require(xml)
install.packages("XML")
library(XML)
library("MASS", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:XML", unload=TRUE)
library("XML", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
ls()
?mean
require(xml)
library(xml)
library(XML)
theURL <- "http://scores.espn.go.com/mlb/boxscore?gameId=350615128"
scoreIS <- readHTMLTable(theURL, which=1, header = False)
scoreIS <- readHTMLTable(theURL, which=1, header = FALSE)
scoreIS
scoreIS <- readHTMLTable(theURL, which=2, header = FALSE)
scoreIS
scoreIS <- readHTMLTable(theURL, which=3, header = FALSE)
scoreIS
scoreIS <- readHTMLTable(theURL, which=4, header = FALSE)
scoreIS
scoreIS <- readHTMLTable(theURL, which=5, header = FALSE)
scoreIS
ls(0)
ls()
scoreIS <- readHTMLTable(theURL, which=4, header = FALSE)
scoreIS
scoreIS <- readHTMLTable(theURL, which=4, header = TRUE)
scoreIS
install.packages("JASON")
install.packages("JSON")
swirl()
install.packages("swirl")
library(swirl)
> swirl()
swirl()
?head
ls()
scoreIS
head(scoreIS)
scoreIS
ls()
scoreIS
getwd()
ls()
pwd
ctree
install.packages("RGtk2")
nstall.packages("rattle")
install.packages("rattle")
q()
getwd()
getwd()
setwd("/Users/abiyugiday/Documents/Data-Science/abiyug.github.io.git")
pwd
ls()
remove( list = ls())
ls()
ls
getwd()
getwd()
